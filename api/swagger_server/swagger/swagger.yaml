openapi: 3.0.0
info:
  title: Inventory Management API
  description: This is a simple API for managing inventory and warehouses.
  contact:
    email: 14822857@uva.nl
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
servers:
- url: /
tags:
- name: admins
  description: Secured Admin-only calls
- name: users
  description: Operations available to Users
paths:
  /location:
    get:
      tags:
      - admins
      summary: Get warehouse info
      operationId: get_warehouse_info
      responses:
        "200":
          description: Warehouse info returned
        "400":
          description: Bad request
      x-openapi-router-controller: swagger_server.controllers.admins_controller
    post:
      tags:
      - admins
      summary: Create new warehouse
      operationId: create_warehouse
      requestBody:
        description: Warehouse to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Warehouse'
        required: true
      responses:
        "201":
          description: Warehouse created
        "400":
          description: Invalid input
        "409":
          description: Warehouse already exists
      x-openapi-router-controller: swagger_server.controllers.admins_controller
  /items:
    get:
      tags:
      - users
      summary: Get list of all items
      operationId: get_items
      parameters:
      - name: searchString
        in: query
        description: Optional search string for filtering inventory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        description: Number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: Maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: List of items returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
                x-content-type: application/json
        "400":
          description: Bad input parameter
      x-openapi-router-controller: swagger_server.controllers.users_controller
    post:
      tags:
      - admins
      summary: Create new item
      operationId: create_item
      requestBody:
        description: Item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      responses:
        "201":
          description: Item created successfully
        "400":
          description: Invalid input
        "409":
          description: An existing item already exists
      x-openapi-router-controller: swagger_server.controllers.admins_controller
  /items/{item_id}:
    get:
      tags:
      - users
      summary: Get stock of specific item for all locations
      operationId: get_item_stock_all_locations
      parameters:
      - name: item_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Stock information returned
        "404":
          description: Item not found
      x-openapi-router-controller: swagger_server.controllers.users_controller
    put:
      tags:
      - admins
      summary: Update item
      operationId: update_item
      parameters:
      - name: item_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Item update payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      responses:
        "200":
          description: Item updated successfully
        "404":
          description: Item not found
      x-openapi-router-controller: swagger_server.controllers.admins_controller
    delete:
      tags:
      - admins
      summary: Delete item
      operationId: delete_item
      parameters:
      - name: item_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Item deleted successfully
        "404":
          description: Item not found
      x-openapi-router-controller: swagger_server.controllers.admins_controller
  /items/{item_id}/location/{location_id}:
    get:
      tags:
      - users
      summary: Get stock of specific item for specific location
      operationId: get_item_stock_specific_location
      parameters:
      - name: item_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: location_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Stock information for specified location returned
        "404":
          description: Item or location not found
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /items/{item_id}/reservations:
    get:
      tags:
      - users
      summary: View reservation for an item
      operationId: view_item_reservation
      parameters:
      - name: item_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Reservation details returned
        "404":
          description: Reservation not found
      x-openapi-router-controller: swagger_server.controllers.users_controller
    post:
      tags:
      - users
      summary: Reserve item
      operationId: reserve_item
      parameters:
      - name: item_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Reservation details for the item
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
        required: true
      responses:
        "201":
          description: Reservation created
        "400":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /reservations/{reservation_id}:
    put:
      tags:
      - admins
      summary: Confirm or alter reservation (including changing to purchased)
      operationId: update_reservation
      parameters:
      - name: reservation_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Reservation update details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationUpdate'
        required: true
      responses:
        "200":
          description: Reservation updated successfully
        "404":
          description: Reservation not found
      x-openapi-router-controller: swagger_server.controllers.admins_controller
  /items/{item_id}/purchase:
    post:
      tags:
      - users
      summary: Purchase an item
      operationId: purchase_item
      parameters:
      - name: item_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Purchase request with header-tied details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
        required: true
      responses:
        "200":
          description: Item purchased successfully
        "404":
          description: Item not found
      x-openapi-router-controller: swagger_server.controllers.users_controller
components:
  schemas:
    Item:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          example: Widget Adapter
      example:
        id: 0
        name: Widget Adapter
    Warehouse:
      required:
      - address
      type: object
      properties:
        id:
          type: integer
          format: int32
        address:
          type: string
      example:
        id: 1
        address: "Dam 1, Amsterdam, The Netherlands"
    ReservationRequest:
      required:
      - reservation_details
      - user_id
      type: object
      properties:
        user_id:
          type: string
        reservation_details:
          type: string
      example:
        user_id: user123
        reservation_details: Reserve item for 2 days
    ReservationUpdate:
      type: object
      properties:
        status:
          type: string
          enum:
          - confirmed
          - altered
          - purchased
        additional_info:
          type: string
      example:
        status: purchased
        additional_info: Payment confirmed
    PurchaseRequest:
      required:
      - payment_token
      type: object
      properties:
        payment_token:
          type: string
      example:
        payment_token: token_xyz

