openapi: 3.0.0
info:
  title: Inventory Management API
  description: This is a simple API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: /
tags:
- name: admins
  description: Secured Admin-only calls
- name: users
  description: Operations available to Users

paths:
  /items:
    get:
      tags:
      - users
      summary: searches items
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      operationId: get_items
      parameters:
      - name: searchString
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
                x-content-type: application/json
        "400":
          description: bad input parameter
      x-openapi-router-controller: swagger_server.controllers.users_controller
    post:
      tags:
      - admins
      summary: adds an inventory item
      description: Adds an item to the system
      operationId: add_item
      requestBody:
        description: InventoryItem to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        "201":
          description: item created
        "400":
          description: "invalid input, object invalid"
        "409":
          description: an existing item already exists
      x-openapi-router-controller: swagger_server.controllers.admins_controller
  /items/{id}:
    get:
      tags:
      - users
      summary: get item by id
      operationId: get_item_by_id
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: returned item
        "404":
          description: item not found
      x-openapi-router-controller: swagger_server.controllers.users_controller
    put:
      tags:
      - admins
      summary: update an item
      operationId: update_item_by_id
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: item updated successfully
        "404":
          description: item not found
      x-openapi-router-controller: swagger_server.controllers.admins_controller
    delete:
      tags:
      - admins
      summary: delete an item
      operationId: delete_item_by_id
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: item deleted successfully
        "404":
          description: item not found
      x-openapi-router-controller: swagger_server.controllers.admins_controller
  /items/buy/{id}:
    get:
      tags:
      - users
      summary: buy an inventory item
      description: Buy an item
      operationId: buy_item
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: item bought
        "404":
          description: item not found
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /location:
    get:
      tags:
      - admins
      summary: searches locations
      description: |
        By passing in the appropriate options, you can search for
        locations in the system
      operationId: get_location
      responses:
        "200":
          description: search locations matching criteria
        "400":
          description: bad input parameter
      x-openapi-router-controller: swagger_server.controllers.admins_controller
    post:
      tags:
      - admins
      summary: add a location
      operationId: add_location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        "201":
          description: location created
        "400":
          description: "invalid input, object invalid"
        "409":
          description: location already exists
      x-openapi-router-controller: swagger_server.controllers.admins_controller
components:
  schemas:
    Item:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          example: Widget Adapter
      example:
        name: Widget Adapter
        id: 0
    Location:
      required:
      - address
      type: object
      properties:
        id:
          type: integer
          format: int32
        address:
          type: string
      example:
        name: ACME Corporation
        address: Dam 1, Amsterdam, The Netherlands

