# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Location(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, address: str=None):  # noqa: E501
        """Location - a model defined in Swagger

        :param id: The id of this Location.  # noqa: E501
        :type id: int
        :param address: The address of this Location.  # noqa: E501
        :type address: str
        """
        self.swagger_types = {
            'id': int,
            'address': str
        }

        self.attribute_map = {
            'id': 'id',
            'address': 'address'
        }
        self._id = id
        self._address = address

    @classmethod
    def from_dict(cls, dikt) -> 'Location':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Location of this Location.  # noqa: E501
        :rtype: Location
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Location.


        :return: The id of this Location.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Location.


        :param id: The id of this Location.
        :type id: int
        """

        self._id = id

    @property
    def address(self) -> str:
        """Gets the address of this Location.


        :return: The address of this Location.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address: str):
        """Sets the address of this Location.


        :param address: The address of this Location.
        :type address: str
        """
        if address is None:
            raise ValueError("Invalid value for `address`, must not be `None`")  # noqa: E501

        self._address = address
